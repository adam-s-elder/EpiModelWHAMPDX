as.matrix()
z <- mvtnorm::dmvnorm(x = xy[, c(1, 2)])
z[which(xy[, 3] == 0)] <- 0
dim(z) <- c(100, 100)
z2 <- z + 1
z3 <- z - 1
fig <- plot_ly(showscale = FALSE)
fig <- fig %>% add_surface(z = ~z)
fig
z[which(xy[, 3] == 0)] <- NA
dim(z) <- c(100, 100)
z2 <- z + 1
z3 <- z - 1
fig <- plot_ly(showscale = FALSE)
fig <- fig %>% add_surface(z = ~z)
fig
z2 <- z * 0
z3 <- z - 1
fig <- plot_ly(showscale = FALSE)
fig <- fig %>% add_surface(z = ~z)
fig <- fig %>% add_surface(z = ~z2, opacity = 0.98)
fig
z <- mvtnorm::dmvnorm(x = xy[, c(1, 2)]) - 0.07
z[which(xy[, 3] == 0)] <- NA
dim(z) <- c(100, 100)
z2 <- z * 0
z3 <- z - 1
fig <- plot_ly(showscale = FALSE)
fig <- fig %>% add_surface(z = ~z)
fig <- fig %>% add_surface(z = ~z2, opacity = 0.98)
fig
?add_surface
WApopdata::msm_15_65_age10_race_region_2014
WApopdata::msm_15_65_age10_race_region_2014$age.grp10
table(WApopdata::msm_15_65_age10_race_region_2014$age.grp10)
dat
library(data.table) # version 1.13.0
DT <- data.table(Fruit = rep(c("banana", "apple", "orange"), 3:1),
Year  = c(2008, 2009, 2010, 2009, 2010, 2010),
Count = 1:6)
DT
class(DT)
DT[Fruit == "banana"]
DT[Fruit == "banana", ]
DT[Fruit == "banana" & Year > 2008, ]
order(DT$Fruit)
DT[order(Fruit), ]
DT[order(Fruit, Year), ]
DT[order(Fruit, -Year), ]
source('~/WApopdata/inst/AdamUseForReweight.R')
here::dr_here()
set.seed(100)
library(nnet)
data("birthwt")
birthwt$low[rbinom(nrow(birthwt), 1, 0.3) == 1] <- NA
birthwt$smoke[rbinom(nrow(birthwt), 1, 0.3) == 1] <- NA
birthwt$smoke[rbinom(nrow(birthwt), 1, 0.3) == 1] <- NA
birthwt$weight <- abs(rnorm(n = nrow(birthwt)))
birthwt$weight[rbinom(nrow(birthwt), 1, 0.3) == 1] <- NA
## Try to call summary:
summary(multinom(low ~ smoke, weights = weight, data = birthwt))
## weights:  3 (2 variable)
#initial  value 19.568554
#final  value 17.446072
#converged
#Error in probs[i, -1, drop = FALSE] : subscript out of bounds
## Why is this failure happening:
fit <- multinom(low ~ smoke, weights = weight, data = birthwt)
## The two following values need to be the same for
## multinomHess to function properly
dim(fit$fitted.values)
dim(model.matrix(fit))
## I think these are the key differences
sum(complete.cases(birthwt[, c("low", "smoke")]))
sum(complete.cases(birthwt[, c("low", "smoke", "weight")]))
set.seed(100)
library(nnet)
library(MASS)
data("birthwt")
birthwt$low[rbinom(nrow(birthwt), 1, 0.3) == 1] <- NA
birthwt$smoke[rbinom(nrow(birthwt), 1, 0.3) == 1] <- NA
birthwt$smoke[rbinom(nrow(birthwt), 1, 0.3) == 1] <- NA
birthwt$weight <- abs(rnorm(n = nrow(birthwt)))
birthwt$weight[rbinom(nrow(birthwt), 1, 0.3) == 1] <- NA
## Try to call summary:
summary(multinom(low ~ smoke, weights = weight, data = birthwt))
## weights:  3 (2 variable)
#initial  value 19.568554
#final  value 17.446072
#converged
#Error in probs[i, -1, drop = FALSE] : subscript out of bounds
## Why is this failure happening:
fit <- multinom(low ~ smoke, weights = weight, data = birthwt)
## The two following values need to be the same for
## multinomHess to function properly
dim(fit$fitted.values)
dim(model.matrix(fit))
## I think these are the key differences
sum(complete.cases(birthwt[, c("low", "smoke")]))
sum(complete.cases(birthwt[, c("low", "smoke", "weight")]))
install.packages("statnet.common")
install.packages("network")
install.packages("network")
install.packages("networkDynamic")
install.packages("ergm")
install.packages("tergm")
install.packages("tergmLite")
install.packages("EpiModel")
# # libr_loc <- "~/R/GHmaster-library/"
# suppressPackageStartupMessages(library(statnet.common, lib.loc = libr_loc))
# suppressPackageStartupMessages(library(network, lib.loc = libr_loc))
# suppressPackageStartupMessages(library(networkDynamic, lib.loc = libr_loc))
# suppressPackageStartupMessages(library(ergm, lib.loc = libr_loc))
# suppressPackageStartupMessages(library(tergm, lib.loc = libr_loc))
# suppressPackageStartupMessages(library(tergmLite, lib.loc = libr_loc))
# suppressPackageStartupMessages(library(EpiModel, lib.loc = libr_loc))
# suppressPackageStartupMessages(library(tidyverse))
# suppressPackageStartupMessages(library(EpiModelHIV))
suppressPackageStartupMessages(library(statnet.common))
suppressPackageStartupMessages(library(network))
install.packages("")
install.packages("EpiModelHPC")
install.packages("ergm.ego")
install.packages("rle ")
install.packages("rle")
install.packages("EpiModelHPC")
remotes::install_github("statnet/EpiModelHPC")
library(swirl)
swirl()
2 + 2
7 * 8
2 ** 3
adam_age <- 26
data <- readxl::read_excel("~/Desktop/spreadsheet.xlsx")
View(data)
adam_age <- 17
data_older <- data[data$Age > adam_age, ]
View(data_older)
plot(x = data$Age, y = data$Income)
library(ggplot2)
ggplot2::ggplot(data, aes(x = Age, y = Income))
ggplot2::ggplot(data, aes(x = Age, y = Income)) + geom_point()
ggplot2::ggplot(data, aes(x = Age, y = Income)) + geom_point() +
ggtitle("Understanding the relationship between age and income")
ggplot2::ggplot(data, aes(x = Age, y = Income)) + geom_point() +
ggtitle("Understanding the relationship between age and income") +
theme(axis.title.y = element_blank())
data
data2 <- readxl::read_excel("~/Desktop/spreadsheet.xlsx")
qqplot(x = 2 * rnorm(10000),
y = rnorm(10000) + rnorm(10000))
aa <- readRDS("~/WHAMP2/EpiModel/AE/")
aa <- readRDS("~/WHAMP2/EpiModel/AE/sim_epimodel3/sim_at_2033_feb8.rds")
library("dplyr")
install.packages("Rcpp")
library(Rcpp)
sessionInfo()
remotes::install_github("dcomtois/summarytools", ref="dev-current")
remotes::install_github("dcomtois/summarytools", ref="dev-current")
unlink("/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-summarytools/")
remotes::install_github("dcomtois/summarytools", ref="dev-current")
library(summarytools)
install.packages("summarytools")
remotes::install_github("dcomtois/summarytools", ref="dev-current")
unlink("/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-summarytools")
unlink("var/folders/c0/_98bzxtd0yn7x95q6vbqmfjm0000gn/T//RtmpaM54AM/file80751e7007ef/summarytools_0.9.9.tar.gz")
remotes::install_github("dcomtois/summarytools", ref="dev-current")
remotes::install_github("dcomtois/summarytools")
remotes::install_github("dcomtois/summarytools")
install.packages("Rcpp")
remotes::install_github("dcomtois/summarytools", ref="dev-current")
unlink("/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-summarytools")
remotes::install_github("dcomtois/summarytools", ref="dev-current")
remotes::install_github("bdwilliamson/vimp/")
remotes::install_github("bdwilliamson/vimp")
remotes::install_github("dcomtois/summarytools", ref="0-9-2")
rm(list = ls())
library(here)
library(knitr)
library(summarytools)
library(tidyverse)
an_dat <- DSdata::egodata_active_new
summary(an_dat$main$egos$age.grp)
summary(an_dat$main$egos$age)
summary(an_dat$main$alters$age)
# Chunk 1: a03
rm(list = ls())
library(here)
library(knitr)
library(summarytools)
library(tidyverse)
an_dat <- DSdata::egodata_active_new
# an_w <- DSdata::sam_ergm_wide %>%
#   dplyr::select(ego.id = AMIS_ID, ZIPCODE, State) %>%
#   mutate(in_wa = State == "WA")
# an_w$wa_reg <- NA
# an_w$region_name[an_w$in_wa] <-
#   WHAMPData::cstr_egodat_var_obj$region_name$func(an_w[an_w$in_wa, ])
# an_w$wa_reg[an_w$in_wa] <-
#   WHAMPData::cstr_egodat_var_obj$region$func(an_w[an_w$in_wa, ])
for (lst_idx in 1:length(an_dat)) {
sub_dat <- an_dat[[lst_idx]]
an_dat[[lst_idx]]$egos$race <-
c("B", "H", "O")[sub_dat$egos$race.cat3]
# an_dat[[lst_idx]]$egos <-
#   left_join(an_dat[[lst_idx]]$egos, an_w)
an_dat[[lst_idx]]$alters$race <-
c("B", "H", "O")[sub_dat$alters$race.cat3]
an_dat[[lst_idx]]$alters$age.grp <-
pmax(1, pmin(6, 1 + floor((an_dat[[lst_idx]]$alters$age - 15) / 10)))
}
wp_dat <- WHAMPData::whampArtnetWA_egodata
opts_chunk$set(results = 'asis', # Can also be set at the chunk-level
comment = NA,
prompt  = FALSE,
cache   = FALSE)
library(summarytools)
st_options(plain.ascii = FALSE,        # Always use this option in Rmd documents
style        = "rmarkdown", # Always use this option in Rmd documents
footnote     = NA,          # Makes html-rendered results more concise
subtitle.emphasis = FALSE)
# Chunk 2: a03_sessioninfo_init_descrip
sessionInfo()
# Chunk 3: a03_get_data_and_metadata
library(tidyverse)
library(kableExtra)
library(here)
library(zipcode)
library(leaflet)
library(htmltools)
library(plotly)
library(sf)
# source("extra_scripts_files/non_table.R")
m_lab_obj <- function(var_name, d_frame = named_df){
all_prev_labs <- c()
all_tbl_labs <- c()
for(p_idx in 1:5){
if(length(grep("p_", var_name)) > 0){
n_var_name <- gsub("p_", paste0("PART", p_idx), var_name)
}else{
n_var_name <- var_name
}
var_atrs <- attributes(d_frame[[n_var_name]])$labels
prev_labs <- as.vector(var_atrs)
tbl_labs <- paste0(names(var_atrs), " (", var_atrs, ")")
if(any( (! (prev_labs %in% all_prev_labs)))){
all_prev_labs <- c(all_prev_labs, prev_labs)
all_tbl_labs <- c(all_tbl_labs, tbl_labs)
}
}
return(list("name" = var_name, "prev_n" = all_prev_labs,
"new_n" = all_tbl_labs))
}
make_crosstab <- function(data_f, var_name, show_perc = TRUE,
just_perc = FALSE){
if (show_perc){ perc <- "r" }else{ perc <- "n" }
if(just_perc){
new_df <- as.data.frame(table(data_f[, c(paste0("ego_", var_name),
paste0("alt_", var_name))],
useNA = "ifany"))
new_df$perc <- 100 * new_df$Freq / sum(round(new_df$Freq))
perc_left <- 100 - sum(floor(new_df$perc))
perc_off <- new_df$perc - floor(new_df$perc)
new_df$perc <- floor(new_df$perc)
new_df$perc[rev(order(perc_off))[1:perc_left]] <-
new_df$perc[rev(order(perc_off))[1:perc_left]] + 1
new_data_f <- data.frame("ego" = rep(new_df[[ paste0("ego_", var_name)]],
times = new_df$perc),
"alt" = rep(new_df[[ paste0("alt_", var_name)]],
times = new_df$perc))
colnames(new_data_f) <- paste0(c("ego_", "alt_"), var_name)
data_f <- new_data_f
perc <- "n"
}
Ego <- data_f[, paste0("ego_", var_name)]
Alter <- data_f[, paste0("alt_", var_name)]
print(ctable(x = Ego, y = Alter, prop = perc,
dnn = paste0(c("Ego ", "Alter "), var_name),
headings = FALSE),
method = "render")
}
make_compr_cross <- function(data_f_whamp, data_f_artnet,
var_name){
ego_var <- paste0("ego_", var_name)
alt_var <- paste0("alt_", var_name)
whmp_tab <- as.data.frame(
table(data_f_whamp[, c(ego_var, alt_var)],
useNA = "ifany")
)
whmp_tab$whamp_perc <- 100 * whmp_tab$Freq / sum(whmp_tab$Freq)
whmp_ego_marg <- as.data.frame(table(data_f_whamp[, ego_var],
useNA = "ifany"))
whmp_ego_marg$whamp_perc <- 100 * whmp_ego_marg$Freq /
sum(whmp_ego_marg$Freq)
whmp_alt_marg <- as.data.frame(table(data_f_whamp[, alt_var],
useNA = "ifany"))
whmp_alt_marg$whamp_perc <- 100 * whmp_alt_marg$Freq /
sum(whmp_alt_marg$Freq)
artn_tab <- as.data.frame(
table(data_f_artnet[, c(ego_var, alt_var)],
useNA = "ifany")
)
artn_tab$artn_perc <- 100 * artn_tab$Freq / sum(artn_tab$Freq)
cmb_tab <- left_join(whmp_tab, artn_tab, by = c(ego_var, alt_var))
cmb_tab$perc_diff <- round(cmb_tab$whamp_perc - cmb_tab$artn_perc, 2)
artn_ego_marg <- as.data.frame(table(data_f_artnet[, ego_var],
useNA = "ifany"))
artn_ego_marg$artn_perc <- 100 * artn_ego_marg$Freq /
sum(artn_ego_marg$Freq)
cmb_ego_marg <- left_join(whmp_ego_marg, artn_ego_marg, by = "Var1")
cmb_ego_marg$perc_diff <- round(cmb_ego_marg$whamp_perc - cmb_ego_marg$artn_perc, 2)
artn_alt_marg <- as.data.frame(table(data_f_artnet[, alt_var],
useNA = "ifany"))
artn_alt_marg$artn_perc <- 100 * artn_alt_marg$Freq /
sum(artn_alt_marg$Freq)
cmb_alt_marg <- left_join(whmp_alt_marg, artn_alt_marg, by = "Var1")
cmb_alt_marg$perc_diff <- round(cmb_alt_marg$whamp_perc - cmb_alt_marg$artn_perc, 2)
cross_tab <- spread(cmb_tab[, c(ego_var, alt_var, "perc_diff")],
alt_var, perc_diff)
cross_tab[, 1] <- as.character(cross_tab[, 1])
cross_tab[nrow(cross_tab) + 1, ] <- c("Overall", cmb_alt_marg$perc_diff)
cross_tab[, ncol(cross_tab) + 1] <- c(cmb_ego_marg$perc_diff, 0)
names(cross_tab) <- c("Egos", names(cross_tab)[-c(1, ncol(cross_tab))], "Overall")
for(c_idx in 2:ncol(cross_tab)){
cross_tab[, c_idx] <- as.numeric(cross_tab[, c_idx])
}
cross_tab %>%
mutate_if(is.numeric, function(x) {
cell_spec(x, bold = T,
color = spec_color(x, end = 0.9))
}) %>%
kable(escape = F, align = "c") %>%
kableExtra::kable_styling(bootstrap_options = "striped",
full_width = FALSE, font_size = 20) %>%
add_header_above(c("  " = 1, "Alters" = ncol(cross_tab) - 1))
}
# Chunk 4: a03_e_race.cat_whamp
st_css()
make_cmbd_dat <- function(ego_dat, altr_dat){
main_egos <- ego_dat
w_egid <- which(colnames(main_egos) == "ego.id")
main_alters <- altr_dat
w_egid_a <- which(colnames(main_alters) == "ego.id")
colnames(main_egos)[-w_egid] <- paste0("ego_", colnames(main_egos)[-w_egid])
colnames(main_alters)[-w_egid_a] <- paste0("alt_", colnames(main_alters)[-w_egid_a])
main_comb_w <- left_join(main_alters, main_egos, by = "ego.id")
return(main_comb_w)
}
this_var <- "race"
main_whamp <- make_cmbd_dat(wp_dat$main$egos, wp_dat$main$alters)
make_crosstab(main_whamp, this_var)
# Chunk 5: a03_e_race.cat_artnet
an_state_id <- data.frame("ego.id" = DSdata::sam_ergm_wide$AMIS_ID,
"state" = DSdata::sam_ergm_wide$State,
stringsAsFactors = FALSE)
wa_ids <- an_state_id$ego.id[an_state_id$state %in% "WA"]
main_wa_egos <- an_dat$main$egos[an_dat$main$egos$ego.id %in% wa_ids, ]
main_wa_alters <- an_dat$main$alters[an_dat$main$alters$ego.id %in% wa_ids, ]
main_nonwa_egos <- an_dat$main$egos[!(an_dat$main$egos$ego.id %in% wa_ids), ]
main_nonwa_alters <- an_dat$main$alters[!(an_dat$main$alters$ego.id %in% wa_ids), ]
main_artnet_wa <- make_cmbd_dat(main_wa_egos, main_wa_alters)
main_artnet_wa$alt_region
main_artnet_wa$ego_race <- main_artnet_wa$ego_race.cat3
main_artnet_wa$alt_race <- main_artnet_wa$alt_race.cat3
make_crosstab(main_artnet_wa, this_var)
# Chunk 6: a03_e_race.cat_artnet_nowa
main_artnet_nowa <- make_cmbd_dat(main_nonwa_egos, main_nonwa_alters)
main_artnet_nowa$ego_race <- main_artnet_nowa$ego_race.cat3
main_artnet_nowa$alt_race <- main_artnet_nowa$alt_race.cat3
make_crosstab(main_artnet_nowa, this_var)
# Chunk 7: a03_maine_race.cat_diff
make_compr_cross(main_artnet_wa, main_artnet_nowa, this_var)
# Chunk 8: a03_maine_race.cat_diff_wa
make_compr_cross(main_whamp, main_artnet_wa, this_var)
# Chunk 9: a03_casle_race.cat_whamp
casl_whamp <- make_cmbd_dat(wp_dat$casl$egos, wp_dat$casl$alters)
make_crosstab(casl_whamp, this_var)
make_crosstab(casl_whamp, "race.cat")
# Chunk 10: a03_casle_race.cat_artnet
casl_wa_alters <- an_dat$casl$alters[
an_dat$casl$alters$ego.id %in% wa_ids, ]
casl_artnet_wa <- make_cmbd_dat(main_wa_egos, casl_wa_alters)
make_crosstab(casl_artnet_wa, this_var)
# Chunk 11: a03_casle_race.cat_artnet_nowa
casl_nonwa_alters <- an_dat$casl$alters[!(an_dat$casl$alters$ego.id %in% wa_ids), ]
casl_artnet_nowa <- make_cmbd_dat(main_nonwa_egos, casl_nonwa_alters)
make_crosstab(casl_artnet_nowa, this_var)
# Chunk 12: a03_casle_race.cat_diff
make_compr_cross(casl_artnet_wa, casl_artnet_nowa, this_var)
# Chunk 13: a03_casle_race.cat_diff_nonwa
make_compr_cross(casl_whamp, casl_artnet_wa, this_var)
# Chunk 14: a03_inst_race.cat_whamp
inst_whamp <- make_cmbd_dat(wp_dat$inst$egos, wp_dat$inst$alters)
make_crosstab(inst_whamp, this_var)
make_crosstab(inst_whamp, "race.cat")
# Chunk 15: a03_inste_race.cat_artnet
inst_wa_alters <- an_dat$inst$alters[an_dat$inst$alters$ego.id %in% wa_ids, ]
inst_artnet_wa <- make_cmbd_dat(main_wa_egos, inst_wa_alters)
make_crosstab(inst_artnet_wa, this_var)
# Chunk 16: a03_inste_race.cat_artnet_nonwa
inst_nonwa_alters <- an_dat$inst$alters[!(an_dat$inst$alters$ego.id %in% wa_ids), ]
inst_artnet_nowa <- make_cmbd_dat(main_nonwa_egos, inst_nonwa_alters)
make_crosstab(inst_artnet_nowa, this_var)
# Chunk 17: a03_inst_race.cat_diff_wa
make_compr_cross(inst_artnet_wa, inst_artnet_nowa, this_var)
# Chunk 18: a03_inste_race.cat_diffnowa
make_compr_cross(inst_whamp, inst_artnet_wa, this_var)
# Chunk 19: a03_ovrl_race.cat_whamp
ovrl_whamp <- make_cmbd_dat(
wp_dat$inst$egos,
rbind(wp_dat$main$alters,
wp_dat$casl$alters,
wp_dat$inst$alters))
make_crosstab(ovrl_whamp, this_var)
make_crosstab(ovrl_whamp, "race.cat")
# Chunk 20: a03_ovrle_race.cat_artnet_wa
ovrl_artnet_wa <- make_cmbd_dat(
main_wa_egos,
rbind(main_wa_alters,
casl_wa_alters,
inst_wa_alters))
make_crosstab(ovrl_artnet_wa, this_var)
# Chunk 21: a03_ovrle_race.cat_artnet_nonwa
ovrl_artnet_nowa <- make_cmbd_dat(
main_nonwa_egos,
rbind(main_nonwa_alters,
casl_nonwa_alters,
inst_nonwa_alters))
make_crosstab(ovrl_artnet_wa, this_var)
# Chunk 22: a03_ovrle_race.cat_diff_nowa
make_compr_cross(ovrl_artnet_wa, ovrl_artnet_nowa, this_var)
# Chunk 23: a03_ovrle_race.cat_diff_wa
make_compr_cross(ovrl_whamp, ovrl_artnet_wa, this_var)
# Chunk 24: a03_e_region_whamp
this_var <- "region"
make_crosstab(main_whamp, this_var, just_perc = TRUE)
# Chunk 25: a03_e_region_whamp_count
make_crosstab(main_whamp, this_var, show_perc = FALSE)
# Chunk 26: a03_e_region_artnet
this_var <- "region"
main_artnet_wa <- main_whamp[main_whamp$alt_if_artnet == 1, ]
make_crosstab(main_artnet_wa, this_var, just_perc = TRUE)
# Chunk 27: a03_e_region_artnet_count
make_crosstab(main_artnet_wa, this_var, show_perc = FALSE)
# Chunk 28: a03_e_region_whamp_casl
this_var <- "region"
make_crosstab(casl_whamp, this_var, just_perc = TRUE)
# Chunk 29: a03_e_region_whamp_count_casl
make_crosstab(casl_whamp, this_var, show_perc = FALSE)
# Chunk 30: a03_e_region_artnet_casl
this_var <- "region"
casl_artnet_wa <- casl_whamp[casl_whamp$alt_if_artnet == 1, ]
make_crosstab(casl_artnet_wa, this_var, just_perc = TRUE)
# Chunk 31: a03_e_region_artnet_count_casl
make_crosstab(casl_artnet_wa, this_var, show_perc = FALSE)
# Chunk 32: a03_e_region_whamp_inst
this_var <- "region"
make_crosstab(inst_whamp, this_var, just_perc = TRUE)
# Chunk 33: a03_e_region_whamp_count_inst
make_crosstab(inst_whamp, this_var, show_perc = FALSE)
# Chunk 34: a03_e_region_artnet_inst
this_var <- "region"
inst_artnet_wa <- inst_whamp[inst_whamp$alt_if_artnet == 1, ]
make_crosstab(inst_artnet_wa, this_var, just_perc = TRUE)
# Chunk 35: a03_e_region_artnet_count_inst
make_crosstab(inst_artnet_wa, this_var, show_perc = FALSE)
# Chunk 36: a03_e_region_whamp_ovrl
this_var <- "region"
make_crosstab(ovrl_whamp, this_var, just_perc = TRUE)
# Chunk 37: a03_e_region_whamp_count_ovrl
make_crosstab(ovrl_whamp, this_var, show_perc = FALSE)
# Chunk 38: a03_e_region_artnet_ovrl
this_var <- "region"
ovrl_artnet_wa <- ovrl_whamp[ovrl_whamp$alt_if_artnet == 1, ]
make_crosstab(ovrl_artnet_wa, this_var, just_perc = TRUE)
# Chunk 39: a03_e_region_artnet_count_ovrl
make_crosstab(ovrl_artnet_wa, this_var, show_perc = FALSE)
this_var <- "age.grp"
make_compr_cross(main_artnet_wa, main_artnet_nowa, this_var)
debug(make_compr_cross)
make_compr_cross(main_artnet_wa, main_artnet_nowa, this_var)
artn_ego_marg
as.data.frame(table(data_f_artnet[, ego_var],
useNA = "ifany"))
data_f_artnet[, ego_var]
table(data_f_artnet[, ego_var])
table(data_f_artnet[, c(ego_var, alt_var)],
useNA = "ifany")
artn_tab
artn_tab$artn_perc <- 100 * artn_tab$Freq / sum(artn_tab$Freq)
whmp_tab
table(data_f_whamp[, c(ego_var, alt_var)],
useNA = "ifany")
table(data_f_whamp$alt_age.grp)
make_compr_cross(main_whamp, main_artnet_wa, this_var)
make_compr_cross(main_whamp, main_artnet_nowa, this_var)
table(main_artnet_wa$alt_age.grp)
table(main_artnet_wa$alt_age.grp, useNA = "al")
table(casl_artnet_wa$alt_age.grp, useNA = "al")
table(inst_artnet_wa$alt_age.grp, useNA = "al")
table(main_artnet_nowa$alt_age.grp, useNA = "al")
table(casl_artnet_nowa$alt_age.grp, useNA = "al")
table(inst_artnet_nowa$alt_age.grp, useNA = "al")
table(WHAMPData::whampArtnetWA_egodata$main$egos$prep, useNA = "al")
table(WHAMPData::whampArtnetWA_egodata$main$egos$art, useNA = "al")
table(WHAMPData::whampArtnetWA_egodata$main$egos$art, useNA = "al")
load("~/EpiModelWHAMPDX/data/WHAMP.targs.rda")
WHAMP.targs
source('~/EpiModelWHAMPDX/inst/WHAMP_Target.R')
setwd("~/EpiModelWHAMPDX/inst")
source('~/EpiModelWHAMPDX/inst/WHAMP_Target.R')
WHAMP.targs
